package com.ayush.blog.appointment.entity;
import com.ayush.blog.entity.User;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

//@Data
//@AllArgsConstructor
//@NoArgsConstructor
//@Entity
//@Table(name = "appointments", uniqueConstraints = {@UniqueConstraint(columnNames = {"appointmentId"})})
//public class Appointment {
//    @Id
//    @GeneratedValue(strategy = GenerationType.IDENTITY)
//    private Long id;
//
//    @Column(name = "appointment_id", nullable = false, unique = true)
//    private String appointmentId;
//
//    @Column(name = "slot_start_time", nullable = false)
//    private LocalDateTime slotStartTime;
//
//    @Column(name = "slot_end_time", nullable = false)
//    private LocalDateTime slotEndTime;
//
//    @Column(name = "service_type", nullable = false)
//    private String serviceType;
//
//    @Column(name = "status", nullable = false)
//    private String status;
//
//    @Column(name = "phone_number", nullable = false)
//    private String phoneNumber; // New field for storing user's phone number
//
//    @ManyToOne(fetch = FetchType.LAZY)
//    @JoinColumn(name = "user_id", nullable = false)
//    private User user;
//
//    @ManyToOne(fetch = FetchType.LAZY)
//    @JoinColumn(name = "consultant_id", nullable = false)
//    private Consultant consultant;
//
//    @ManyToOne(fetch = FetchType.LAZY)
//    @JoinColumn(name = "slot_id", nullable = false)
//    private Slot slot; // Association with Slot entity to track which slot was booked
//
//    // Getters and Setters can be auto-generated by Lombok (@Data annotation)
//}


@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "appointments", uniqueConstraints = {@UniqueConstraint(columnNames = {"appointmentId"})})
public class Appointment {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String appointmentId;
    private LocalDateTime slotStartTime;
    private LocalDateTime slotEndTime;
    private String status;
    private String phoneNumber;
    @Column(name = "service_type", nullable = false)
    private String serviceType;

    @ManyToOne(fetch = FetchType.LAZY)
    private User user;

    @ManyToOne(fetch = FetchType.LAZY)
    private Consultant consultant;

    @ManyToOne(fetch = FetchType.LAZY)
    private Slot slot;
}
